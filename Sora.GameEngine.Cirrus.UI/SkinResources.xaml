<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
                    >
    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="SkinScrollBar\SkinScrollBarResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>-->
    
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
          Width="15"
          Height="13"
          Background="Transparent">
                        <Path x:Name="ExpandPath"
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="1,1,1,1"
            Fill="{StaticResource GlyphBrush}"
            Data="M 4 0 L 8 4 L 4 8 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
               Value="True">
                            <Setter Property="Data"
                TargetName="ExpandPath"
                Value="M 0 4 L 8 4 L 4 8 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                 StrokeThickness="5"
                 Stroke="Black"
                 StrokeDashArray="1 2"
                 Opacity="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style 
     TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
      Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
      Value="{Binding Path=HorizontalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
      Value="{Binding Path=VerticalContentAlignment,
              RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding"
      Value="1,0,0,0"/>
        <Setter Property="Foreground"
      Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle"
      Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
                      Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                  Style="{StaticResource ExpandCollapseToggleStyle}"
                  IsChecked="{Binding Path=IsExpanded,
                              RelativeSource={RelativeSource TemplatedParent}}"
                  ClickMode="Press"/>
                        <!--
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                        -->
                        <Border CornerRadius="2,2,2,2"
                            Name="Bd"
              Grid.Column="1"
              Background="{TemplateBinding Background}"
              Padding="{TemplateBinding Padding}" BorderThickness="1" BorderBrush="#00B6B6B6">
                            <Grid>
                                <ContentPresenter x:Name="PART_Header"
                                    Margin="5,1,5,1"
                                    ContentSource="Header"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False"/>
                                
                                <Rectangle Fill="#02000000" Name="MouseOverTrap"/>
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                  Grid.Row="1"
                  Grid.Column="1"
                  Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseDirectlyOver" SourceName="MouseOverTrap" Value="True">
                			<Setter Property="BorderBrush" TargetName="Bd" Value="#7FB6B6B6"/>
                		</Trigger>
                		<Trigger Property="IsExpanded"
                			Value="false">
                			<Setter TargetName="ItemsHost"
                				Property="Visibility"
                				Value="Collapsed"/>
                		</Trigger>
                		<Trigger Property="HasItems"
                			Value="false">
                			<Setter TargetName="Expander"
                				Property="Visibility"
                				Value="Hidden"/>
                		</Trigger>
                		<MultiTrigger>
                			<MultiTrigger.Conditions>
                				<Condition Property="HasHeader"
                					Value="false"/>
                				<Condition Property="Width"
                					Value="Auto"/>
                			</MultiTrigger.Conditions>
                			<Setter TargetName="PART_Header"
                				Property="MinWidth"
                				Value="75"/>
                		</MultiTrigger>
                		<MultiTrigger>
                			<MultiTrigger.Conditions>
                				<Condition Property="HasHeader"
                					Value="false"/>
                				<Condition Property="Height"
                					Value="Auto"/>
                			</MultiTrigger.Conditions>
                			<Setter TargetName="PART_Header"
                				Property="MinHeight"
                				Value="19"/>
                		</MultiTrigger>
                		<Trigger Property="IsSelected"
                			Value="true">
                			<Setter TargetName="Bd"
                				Property="Background" Value="DarkGray"/>
                			<Setter Property="Foreground" Value="White"/>
                		</Trigger>
                		<MultiTrigger>
                			<MultiTrigger.Conditions>
                				<Condition Property="IsSelected"
                					Value="true"/>
                				<Condition Property="IsSelectionActive"
                					Value="false"/>
                			</MultiTrigger.Conditions>
                			<Setter TargetName="Bd"
                				Property="Background"
                				Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                			<Setter Property="Foreground"
                				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                		</MultiTrigger>
                		<Trigger Property="IsEnabled"
                			Value="false">
                			<Setter Property="Foreground"
                				Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid RenderTransformOrigin="0.5,0.5" x:Name="MainGrid">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Border BorderThickness="2,2,2,2" CornerRadius="5,5,5,5" BorderBrush="#FF606060" x:Name="border">
                            <Border.BitmapEffect>
                                <OuterGlowBitmapEffect GlowColor="#FFFFFFFF" GlowSize="5" Opacity="0"/>
                            </Border.BitmapEffect>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF191E26" Offset="1"/>
                                    <GradientStop Color="#FF53647C" Offset="0.004"/>
                                    <GradientStop Color="#FF3F4C60" Offset="0.451"/>
                                    <GradientStop Color="#FF252E39" Offset="0.527"/>
                                    <GradientStop Color="#FF191E26" Offset="0.982"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid Margin="2,2,2,2" x:Name="grid1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="contentPresenter"/>
                            </Grid>
                        </Border>
                        <Rectangle Margin="2,2,2,2" Stroke="{x:Null}" RadiusX="3" RadiusY="3" x:Name="rectangle" Fill="#FFFFFFFF" StrokeThickness="0" Opacity="0" IsHitTestVisible="False" Visibility="Visible"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}" x:Name="Storyboard1_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="rectangle" Value="0.5"/>
                            <Setter Property="Fill" TargetName="rectangle" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
    </Style>

</ResourceDictionary>